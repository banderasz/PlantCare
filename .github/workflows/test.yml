name: Test
on:
  pull_request:
    types: [ opened, synchronize, reopened ]
  workflow_dispatch:

permissions: write-all

jobs:
  test:
    name: Analyze
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'zulu' # Alternative distribution options are available.
      - name: Cache SonarCloud packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: mvn -X -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=banderasz_PlantCare

  terraform:
    name: Terraform Plan
    runs-on: ubuntu-latest
    needs: [ test ]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Auth
        uses: 'google-github-actions/auth@v2'
        with:
          credentials_json: '${{ secrets.GKE_SA_KEY }}'

      - name: Extract Terraform Version
        run: |
          echo "TF_VERSION=$(grep 'required_version' main.tf | cut -d '"' -f 2)" >> $GITHUB_ENV
        working-directory: "./tf-code"

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Terraform Init
        run: terraform init -backend-config=gcp-plantcare.backend
        working-directory: "./tf-code"

      - name: Terraform Plan
        id: plan
        run: terraform plan -no-color -lock=true
        working-directory: "./tf-code"

      - name: Comment PR
        uses: actions/github-script@0.9.0
        if: github.event_name == 'pull_request'
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const output = `${{ steps.plan.outputs.stdout }}\n${{ steps.plan.outputs.stderr }}`;
            const issue_number = context.issue.number;
            github.issues.createComment({
              issue_number: issue_number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: '### Terraform Plan\n' + '```' + output + '```'
            });
